using System.Collections.Generic;using UnityEngine;using Newtonsoft.Json;public class TaskCfg  {	public int ID { get; set; }	public int[] Chapter { get; set; }	public int[] Interaction { get; set; }	public string Event { get; set; }	public string[] Args { get; set; }	public bool Repeate { get; set; }	 	public static string configName = "TaskCfg";	public static TaskCfg config { get; set; }	public static LanguageConfigData languageConfigData;	public string version { get; set; }	public List<TaskCfg> datas { get; set; }	public static TaskCfg Get(int id)	{		if (config == null)		{			config = ConfigManager.Instance.Readjson<TaskCfg>(configName);			languageConfigData = ConfigManager.Instance.ReadLanguageJson(configName);;		}		foreach (var item in config.datas)		{			if (item.ID == id)			{ 					return item;			}		}		return null;	}	public static List<TaskCfg> GetList()	{		if (config == null)		{			config= ConfigManager.Instance.Readjson<TaskCfg>(configName);		}		return config.datas;	}	public static string GetLangugeText(int id, Language language)	{		if (config == null)		{			config = ConfigManager.Instance.Readjson<TaskCfg>(configName);			languageConfigData = ConfigManager.Instance.ReadLanguageJson(configName);;		}		if (languageConfigData.languageItemDatas.ContainsKey(id))		{			foreach (var data in languageConfigData.languageItemDatas[id])			{				if (data.language == language)				return data.value;			}		}		return "";	}	}